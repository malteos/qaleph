version: "3.2"

services:
  postgres:
    image: postgres:10.0
    hostname: postgres
    ports:
      - "127.0.0.1:15432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: aleph
      POSTGRES_PASSWORD: aleph
      POSTGRES_DATABASE: aleph

  elasticsearch:
    build:
      context: ../services/elasticsearch
    image: malteos/aleph-elasticsearch:${ALEPH_TAG:-latest}
    hostname: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ports:
      - "127.0.0.1:19200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  redis:
      image: redis:alpine
      command: ["redis-server", "--appendonly", "yes"]
      volumes:
        - redis-data:/data
      ports:
        - "6379:6379"

  convert-document:
    image: alephdata/convert-document:c48bb70a4553809d3c6dcace37eceaa355e16ba7
    restart: on-failure
    tmpfs:
      - /tmp
      - /root/.config
      - /home/app/.config

  ingest-file:
    build:
      context: ../services/ingest-file
#    image: malteos/ingest-file:${ALEPH_TAG:-latest}
    image: alephdata/ingest-file:${ALEPH_TAG:-latest}
    hostname: ingest
    tmpfs: /tmp
    volumes:
      - archive-data:/data
      - "../services/ingest-file/ingestors:/ingestors/ingestors"
      - "../services/ingest-file/tests:/ingestors/tests"
      - "../services/ingest-file/data:/ingestors/data"
      - "../services/ingest-file/requirements.txt:/ingestors/requirements.txt"
      - "/:/host"
    links:
      - postgres
      - redis
      - convert-document
    restart: on-failure
    env_file:
      - ../aleph.env
    command: bash -c "ingestors process"

  app:
    build:
      context: ..
    image: malteos/aleph:${ALEPH_TAG:-latest}
    hostname: aleph
    #command: /bin/bash
    #    command: bash -c "
    #      pip3 install --no-cache-dir -e /host/Volumes/data/repo/qurator/followthemoney
    #      && /bin/bash
    #      "
    command: bash -c "/bin/bash"
    links:
      - postgres
      - elasticsearch
      - redis
      - ingest-file
    tmpfs: /tmp
    volumes:
      - archive-data:/data
      - "../aleph:/aleph/aleph"
      - "../contrib:/aleph/contrib"
      - "../mappings:/aleph/mappings"
      - "../qurator/pages:/aleph/qurator/pages"
      - "/:/host"
    cap_add:
      - SYS_PTRACE
    environment:
      ALEPH_DEBUG: 'true'
      ALEPH_SECRET_KEY: 'development'
    env_file:
      - ../aleph.env

  api:
    build:
      context: ..
    image: malteos/aleph:${ALEPH_TAG:-latest}
    #    command: bash -c "
    #      pip3 install -e /host/Volumes/data/repo/qurator/followthemoney
    #      && aleph run -h 0.0.0.0 -p 5000 --with-threads --reload --debugger
    #      "
    command: aleph run -h 0.0.0.0 -p 5000 --with-threads --reload --debugger
    ports:
      - "127.0.0.1:5000:5000"
    restart: on-failure
    links:
      - postgres
      - elasticsearch
      - redis
      - ingest-file
    tmpfs: /tmp
    volumes:
      - archive-data:/data
      - "../aleph:/aleph/aleph"
      - "../qurator/pages:/aleph/qurator/pages"
      - "/:/host"
    environment:
      ALEPH_DEBUG: 'true'
      ALEPH_SECRET_KEY: 'development'
    env_file:
      - ../aleph.env

  ui:
    build:
      context: ../ui
    image: malteos/aleph-ui:${ALEPH_TAG:-latest}
    links:
      - api
    command: npm run start
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - "../ui/src:/alephui/src"
      - "../ui/public:/alephui/public"
      - "../ui/package.json:/alephui/package.json"
      # Do not mount node_modules, instead build image with dependencies!
      #########
      #- "../ui/node_modules:/alephui/src/node_modules"
      #- "../ui/tsconfig.json:/alephui/tsconfig.json"
      #- "./ui/.eslintrc.json:/alephui/.eslintrc.json"

    environment:
      PORT: '8080'
      CI: 'true'
    env_file:
      - ../aleph.env
  cwm:
    build:
     context: ../services/qurator_cwm
    # image: malteos/cwm:${ALEPH_TAG:-latest}
    volumes:
    - archive-data:/data
    - "../services/qurator_cwm/qurator_cwm:/qurator_cwm/qurator_cwm"
    - "/:/host"
    restart: on-failure
    env_file:
    - ../aleph.env

volumes:
  archive-data: {}
  elasticsearch-data: {}
  postgres-data: {}
  redis-data: {}
