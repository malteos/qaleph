version: "3.2"

services:
  postgres:
    image: postgres:10.0
    volumes:
    - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: aleph
      POSTGRES_PASSWORD: aleph
      POSTGRES_DATABASE: aleph

  elasticsearch:
    image: malteos/aleph-elasticsearch:${ALEPH_TAG:-3.8.9}
    hostname: elasticsearch
    environment:
    - discovery.type=single-node
    volumes:
    - elasticsearch-data:/usr/share/elasticsearch/data

  redis:
    image: redis:alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
    - redis-data:/data

  convert-document:
    image: alephdata/convert-document:c48bb70a4553809d3c6dcace37eceaa355e16ba7
    read_only: true
    restart: on-failure
    tmpfs: /tmp

  ingest-file:
    image: malteos/ingest-file:${ALEPH_TAG:-3.8.9}
    tmpfs:
    - /tmp:mode=777
    volumes:
    - archive-data:/data
    links:
    - postgres
    - redis
    - convert-document
    restart: on-failure
    env_file:
    - ../aleph.env

  worker:
    image: malteos/aleph:${ALEPH_TAG:-3.8.9}
    command: aleph worker
    restart: on-failure
    links:
    - postgres
    - elasticsearch
    - redis
    - ingest-file
    tmpfs:
    - /tmp
    volumes:
    - archive-data:/data
    env_file:
    - ../aleph.env

  shell:
    image: malteos/aleph:${ALEPH_TAG:-3.8.9}
    command: /bin/bash
    links:
    - postgres
    - elasticsearch
    - redis
    - ingest-file
    - worker
    tmpfs:
    - /tmp
    volumes:
    - archive-data:/data
    - "./mappings:/aleph/mappings"
    - "/:/host"
    env_file:
    - ../aleph.env

  api:
    image: malteos/aleph:${ALEPH_TAG:-3.8.9}
    command: gunicorn -w 6 -b 0.0.0.0:8000 --log-level debug --log-file - aleph.wsgi:app
    expose:
    - 8000
    links:
    - postgres
    - elasticsearch
    - redis
    - worker
    - ingest-file
    tmpfs:
    - /tmp
    volumes:
    - archive-data:/data
    env_file:
    - ../aleph.env

  ui:
    image: malteos/aleph-ui-production:${ALEPH_TAG:-3.8.9}
    links:
    - api
    ports:
    - "8080:8080"

  cwm:
    build:
     context: ../services/qurator_cwm
    image: malteos/cwm:${ALEPH_TAG:-latest}
    volumes:
    - archive-data:/data
    restart: on-failure
    env_file:
    - ../aleph.env

volumes:
  archive-data: {}
  postgres-data: {}
  redis-data: {}
  elasticsearch-data: {}
